services:
  redis:
    image: redis:7.2-alpine
    container_name: my-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  postgres:
    image: postgres:16-alpine
    container_name: my-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 3s
      retries: 3
    networks:
      - app-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-app
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - '8080:8080'
    environment:
      - SERVER_ADDRESS=0.0.0.0:8080
    networks:
      - app-network
    env_file:
      - .env

volumes:
  redis_data:
  postgres_data:

networks:
  app-network:
    driver: bridge
